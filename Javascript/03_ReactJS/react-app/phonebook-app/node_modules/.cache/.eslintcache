[{"/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/index.js":"1","/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/App.js":"2","/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/components/Contact.js":"3","/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/components/server.js":"4","/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/components/Error.js":"5"},{"size":212,"mtime":1673287925127,"results":"6","hashOfConfig":"7"},{"size":3552,"mtime":1673288478372,"results":"8","hashOfConfig":"7"},{"size":160,"mtime":1673109863968,"results":"9","hashOfConfig":"7"},{"size":541,"mtime":1673111334911,"results":"10","hashOfConfig":"7"},{"size":304,"mtime":1673288097508,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tejzhp",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/index.js",[],[],"/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/App.js",["29"],[],"import { useState, useEffect } from \"react\";\nimport axios from 'axios'\nimport Contact from './components/Contact'\nimport serverService from './components/server'\nimport Notification from './components/Error'\n\nconst App = () =>{\n  const [contacts, setContacts] = useState([])\n  const[newContact, setNewContact] = useState('')\n  const[newNumber, setNewNumber] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [className, setClassName] = useState('')\n\n  useEffect(()=>{\n    serverService \n      .getAll()\n      .then(response=>{\n        setContacts(response.data)\n      })\n  },[])\n\n  const addContact = (event) => {\n    event.preventDefault()\n\n    const lastContact = contacts.at(-1).id\n\n    const personObject = {\n      name: newContact,\n      number: newNumber,\n      id: lastContact + 1\n    }\n\n    const alreadyContact = contacts.filter(contact => contact.name === personObject.name)\n    \n    if (alreadyContact.length === 0) {\n      serverService\n        .create(personObject)\n        .then(response =>{\n          setContacts(contacts.concat(response.data))\n          setNewContact('')\n          setNewNumber('')\n        })\n        setErrorMessage(`Added User ${personObject.name}`)\n        setClassName('add')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n    } else {\n      const response = window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n      if (response !== null) {\n        serverService\n          .update(alreadyContact[0].id, personObject)\n          \n        serverService \n          .getAll()\n          .then(response=>{\n            setContacts(response.data)\n          })\n      }\n    }\n    \n    setNewContact('')\n    setNewNumber('')\n  }\n  \n\n  const deleteContact = (props) => {\n    \n    const response = window.confirm(`Remove user ${props.name}?`)\n    if (response !== null) {\n      serverService\n        .remove(props.id)\n        .then(response=>{\n          console.log(response.data);\n          setContacts(response.data)\n        })\n        .catch( error =>{\n          setErrorMessage(`User ${props.name} has already been removed from server`)\n          setClassName('error')\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n\n        setContacts(contacts.filter(contact => contact.id !== props.id) )\n    } \n\n    \n  }\n\n  const handleContactChange = (event) =>{\n    setNewContact(event.target.value)\n  }\n\n  const handleNumberChange = (event) =>{\n    setNewNumber(event.target.value)\n  }\n  \n\n  return(\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errorMessage} classCSS={className}/>\n      <h1>Add a New Contact</h1>\n      <form onSubmit={addContact}>\n        <div>\n          name:<input \n            value={newContact}\n            onChange={handleContactChange}\n            />\n        </div>\n        <div>\n        number:<input \n          value={newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n      <h1>Contact Overview</h1>\n      <u>\n        {\n          contacts.map((contact,id) =>(\n            <div key={id}>\n              <Contact \n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n                />\n              <button onClick={deleteContact.bind(this, contact)}>\n                delete\n              </button>\n            </div>\n          ))\n        }\n      </u>\n    </div>\n  )\n\n}\n\nexport default App","/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/components/Contact.js",[],[],"/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/components/server.js",["30"],[],"import axios from 'axios'\nconst baseURL = 'http://localhost:3001/persons'\n\nconst getAll = () =>{\n    return axios.get(baseURL)\n}\n\nconst create = newObject =>{\n    return axios.post(baseURL, newObject)\n}\n\nconst update = (id,newObject) =>{\n    return axios.put(`${baseURL}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n    async function deleteEntry(id) {\n        await axios.delete(`${baseURL}/${id}`)\n        return axios.get(baseURL)\n    }\n    deleteEntry(id)\n    return axios.get(baseURL)\n}\n\nexport default {getAll, create, update,remove}","/home/stumpcore/Programming/00_Github/Javascript/Javascript/03_ReactJS/react-app/phonebook-app/src/components/Error.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":25,"column":1,"nodeType":"37","endLine":25,"endColumn":47},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]